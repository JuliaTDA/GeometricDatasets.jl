---
title: "Sampling data"
---

Methods for extracting subsets of the original pointcloud.

```{julia}
using GeometricDatasets
using CairoMakie
```

## Farthest points sample

```{julia}
#| echo: false
@qdoc farthest_points_sample
```

Let $X$ be a set of random numbers in the unit square:

```{julia}
X = rand(2, 5000);
fig, ax, plt = scatter(X);
fig
```

Let's apply the farthest points sample using different parameters $n$

```{julia}
L = farthest_points_sample(X, 50)
plt2 = scatter!(ax, X[:, L], color = :red);
fig
```

```{julia}
plt2.alpha = 0
L = farthest_points_sample(X, 100)
plt2 = scatter!(ax, X[:, L], color = :red)
fig
```

```{julia}
plt2.alpha = 0
L = farthest_points_sample(X, 500)
plt2 = scatter!(ax, X[:, L], color = :red)
fig
```

```{julia}
plt2.alpha = 0
L = farthest_points_sample(X, 1000)
plt2 = scatter!(ax, X[:, L], color = :red)
fig
```

## $ϵ$-net

An $ϵ$-net is a subset $Y$ of a point cloud $X$ such that every point $x \in X$ is in an ϵ-ball with center in $y$ for some $y \in Y$.

### Example

First we define `X` to be 1000 random points in the unique square of $\mathbb{R}^2$:

```{julia}
X = rand(2, 10^4)
fig, ax, plt = scatter(X)
fig
```

Then we create the $\epsilon$-net of $X$ and plot it in red:

```{julia}
ϵ = 0.1
L = epsilon_net(X, ϵ)
Y = X[:, L]

scatter!(ax, Y, color = :red)
fig
```